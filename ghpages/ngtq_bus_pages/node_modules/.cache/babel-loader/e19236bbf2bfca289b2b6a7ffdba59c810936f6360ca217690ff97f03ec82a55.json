{"ast":null,"code":"var _jsxFileName = \"/home/ngdeveloper/NGTQ_BusService/ghpages/ngtq_bus_pages/src/components/PageBody.tsx\";\nimport React from \"react\";\nimport \"../style/PageBody.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PageBody(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"about-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"NGTQ Bus Services\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"intro-section\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"lead\",\n          children: [\"The NGTQ Bus Services project represents a new approach to implementing message bus services in Rust, built around a flexible and extensible task queue abstraction.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 185\n          }, this), \"At its core, this project introduces the NGTQ (Next Generation Task Queue) trait, which serves as a foundation for creating interchangeable task queue implementations.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"goals-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Project Goals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Our primary goal is to provide developers with a collection of bus services that can adapt to different use cases while maintaining a consistent interface.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 176\n          }, this), \" The project's architecture separates concerns into three distinct layers: the NGTQ abstraction layer, concrete task queue implementations, and bus services that utilize them.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"architecture-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Architecture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The NGTQ abstraction layer, defined in the ngtq crate, establishes a standard interface that any task queue implementation must follow.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 156\n          }, this), \" This design choice ensures that developers can swap different queue implementations without modifying their bus service code, promoting flexibility and maintainability.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-status-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Current Implementation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Currently, we offer the ngtask_queue as our reference implementation of the NGTQ trait, demonstrating how to create a concrete task queue that adheres to the abstraction.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 191\n          }, this), \" The ngtq_bus_service, our first bus service implementation, showcases how to build a message bus using Unix domain sockets for inter-process communication while leveraging the NGTQ abstraction.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"future-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Future Development\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Future releases will introduce additional bus service implementations, each designed for specific use cases and environments. We'll provide comprehensive documentation, including installation guides, performance benchmarks, and detailed comparisons to help developers choose the right implementation for their needs.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"community-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Community Involvement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"As an open-source project, we welcome community contributions and feedback. Whether you're interested in creating new task queue implementations, developing bus services for different protocols, or improving our documentation, there are many ways to get involved.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"documentation-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Documentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Our documentation will continue to expand, covering topics such as implementation guides, API references, performance optimizations, and best practices. We're committed to maintaining clear, practical documentation that helps developers understand and effectively use our components.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"closing-section\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The project is actively maintained and growing. We're currently working on new bus service implementations, comprehensive benchmarking suites, and expanded documentation. Stay connected through our GitHub repository to keep up with the latest developments and contribute to the project's evolution.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = PageBody;\nexport default PageBody;\nvar _c;\n$RefreshReg$(_c, \"PageBody\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PageBody","props","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ngdeveloper/NGTQ_BusService/ghpages/ngtq_bus_pages/src/components/PageBody.tsx"],"sourcesContent":["import React from \"react\";\nimport \"../style/PageBody.css\";\n\ntype PageBodyProp = {\n    currentPage: string\n}\n\nfunction PageBody(props: PageBodyProp) {\n    return (\n    <div className=\"page-body\">\n        <div className=\"about-container\">\n            <h2>NGTQ Bus Services</h2>\n\n            <div className=\"intro-section\">\n                <p className=\"lead\">\n                    The NGTQ Bus Services project represents a new approach to implementing message bus services in Rust, built around a flexible and extensible task queue abstraction.<br/>At its core, this project introduces the NGTQ (Next Generation Task Queue) trait, which serves as a foundation for creating interchangeable task queue implementations.\n                </p>\n            </div>\n\n            <div className=\"goals-section\">\n                <h3>Project Goals</h3>\n                <p>\n                    Our primary goal is to provide developers with a collection of bus services that can adapt to different use cases while maintaining a consistent interface.<br/> The project's architecture separates concerns into three distinct layers: the NGTQ abstraction layer, concrete task queue implementations, and bus services that utilize them.\n                </p>\n            </div>\n\n            <div className=\"architecture-section\">\n                <h3>Architecture</h3>\n                <p>\n                    The NGTQ abstraction layer, defined in the ngtq crate, establishes a standard interface that any task queue implementation must follow.<br/> This design choice ensures that developers can swap different queue implementations without modifying their bus service code, promoting flexibility and maintainability.\n                </p>\n            </div>\n\n            <div className=\"current-status-section\">\n                <h3>Current Implementation</h3>\n                <p>\n                    Currently, we offer the ngtask_queue as our reference implementation of the NGTQ trait, demonstrating how to create a concrete task queue that adheres to the abstraction.<br/> The ngtq_bus_service, our first bus service implementation, showcases how to build a message bus using Unix domain sockets for inter-process communication while leveraging the NGTQ abstraction.\n                </p>\n            </div>\n\n            <div className=\"future-section\">\n                <h3>Future Development</h3>\n                <p>\n                    Future releases will introduce additional bus service implementations, each designed for specific use cases and environments. We'll provide comprehensive documentation, including installation guides, performance benchmarks, and detailed comparisons to help developers choose the right implementation for their needs.\n                </p>\n            </div>\n\n            <div className=\"community-section\">\n                <h3>Community Involvement</h3>\n                <p>\n                    As an open-source project, we welcome community contributions and feedback. Whether you're interested in creating new task queue implementations, developing bus services for different protocols, or improving our documentation, there are many ways to get involved.\n                </p>\n            </div>\n\n            <div className=\"documentation-section\">\n                <h3>Documentation</h3>\n                <p>\n                    Our documentation will continue to expand, covering topics such as implementation guides, API references, performance optimizations, and best practices. We're committed to maintaining clear, practical documentation that helps developers understand and effectively use our components.\n                </p>\n            </div>\n\n            <div className=\"closing-section\">\n                <p>\n                    The project is actively maintained and growing. We're currently working on new bus service implementations, comprehensive benchmarking suites, and expanded documentation. Stay connected through our GitHub repository to keep up with the latest developments and contribute to the project's evolution.\n                </p>\n            </div>\n        </div>\n    </div>\n    );\n}\n\nexport default PageBody;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}